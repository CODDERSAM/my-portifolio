(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))n(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const r of s.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&n(r)}).observe(document,{childList:!0,subtree:!0});function c(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(o){if(o.ep)return;o.ep=!0;const s=c(o);fetch(o.href,s)}})();const m=()=>{const t=document.querySelector(".header__bars"),e=document.querySelector(".mobile-nav"),c=document.querySelectorAll(".mobile-nav__link");let n=!1;t.addEventListener("click",()=>{n=!n,n?(e.style.display="flex",document.body.style.overflowY="hidden"):(e.style.display="none",document.body.style.overflow="auto")}),c.forEach(o=>{o.addEventListener("click",()=>{n=!1,e.style.display="none",document.body.style.overflowY="auto"})})},u=()=>{const t=document.querySelectorAll("#theme-toggle"),e=localStorage.getItem("theme");e&&document.body.classList.add(e);const c=()=>{document.body.classList.toggle("light-mode"),document.body.classList.contains("light-mode")?localStorage.setItem("theme","light-mode"):(localStorage.removeItem("theme"),document.body.removeAttribute("class"))};t.forEach(n=>n.addEventListener("click",c))},i=new IntersectionObserver(t=>{t.forEach(e=>{console.log(e),e.isIntersecting&&e.target.classList.add("animate-bottom-show")})}),f=document.querySelectorAll(".animate-bottom-hidden");f.forEach(t=>i.observe(t));const l=new IntersectionObserver(t=>{t.forEach(e=>{console.log(e),e.isIntersecting?e.target.classList.add("animate-left-show"):e.target.classList.remove("animate-left-show")})}),h=document.querySelectorAll(".animate-left-hidden");h.forEach(t=>l.observe(t));const a=new IntersectionObserver(t=>{t.forEach(e=>{console.log(e),e.isIntersecting?e.target.classList.add("animate-right-show"):e.target.classList.remove("animate-right-show")})}),g=document.querySelectorAll(".animate-right-hidden");g.forEach(t=>a.observe(t));const d=new IntersectionObserver(t=>{t.forEach(e=>{console.log(e),e.isIntersecting&&e.target.classList.add("animate-top-show")})}),b=document.querySelectorAll(".animate-top-hidden");b.forEach(t=>d.observe(t));m();u();d();i();l();a();